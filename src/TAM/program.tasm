PUSH 1
PUSH 1
PUSH 1
LOADL 1
STORE(1) 2[SB]
LOAD(1) 2[SB]
POP(0) 1
LOADL 3
STORE(1) 1[SB]
LOAD(1) 1[SB]
POP(0) 1
LWHILESTART1:
PUSH 1
LOADL 2
STORE(1) 3[SB]
LOAD(1) 3[SB]
POP(0) 1
LOAD(1) 2[SB]
JUMPIF(0) LWHILEFINALLY1[CB]
LOAD(1) 1[SB]
LOAD(1) -1[ST]
CALL putint
POP(0) 0
CALL puteol
POP(0) 1
LOAD(1) 3[SB]
LOAD(1) -1[ST]
CALL putint
POP(0) 0
CALL puteol
POP(0) 1
LOAD(1) 1[SB]
LOAD(1) 3[SB]
CALL add
STORE(1) 1[SB]
LOAD(1) 1[SB]
POP(0) 1
LOAD(1) 1[SB]
LOADL 11
LOADL 1
CALL ne
STORE(1) 2[SB]
LOAD(1) 2[SB]
JUMP LWHILESTART1[CB]
POP(1) 0
POP(1) 0
LWHILEFINALLY1:
POP(0) 1
LOAD(1) 1[SB]
LOADL 0
JUMPIF(0) ERRORZERODIV [CB]
CALL div
POP(0) 1
LOAD(1) 1[SB]
LOAD(1) -1[ST]
CALL putint
POP(0) 0
CALL puteol
POP(0) 3
HALT
ERRORZERODIV: LOADL 1
STORE(1) 0[SB]
JUMP ERROR[CB]
ERRORINPUT: LOADL 2
STORE(1) 0[SB]
JUMP ERROR[CB]
ERROR: LOAD(1) 0[SB]
LOADL 69
CALL put
LOADL 114
CALL put
LOADL 114
CALL put
LOADL 111
CALL put
LOADL 114
CALL put
LOADL 58
CALL put
LOADL 32
CALL put
CALL putint
HALT
